pipeline {
    agent any

    parameters {
        string(name: 'GCS_BUCKET_PATH', defaultValue: '', description: 'Full GCS path to the .yml file')
        string(name: 'PCI_FLOW', defaultValue: 'true', description: 'Value for pciFlow')
        string(name: 'CP_OR_RNM', defaultValue: 'rename', description: 'Value for cpOrRnm')
        string(name: 'OUTPUT_FILE_NAME', defaultValue: 'abcd', description: 'Value for outputFileName')
        string(name: 'FROM_PATH', defaultValue: 'efgh', description: 'Value for fromPath')
        string(name: 'APP_ID_SECOND', defaultValue: 'GBPCAN1', description: 'Second appId value')
    }

    environment {
        GCS_BUCKET_PATH = "${params.GCS_BUCKET_PATH}"
        LOCAL_YML_FILE = "downloaded.yml"  // Local file name after downloading from GCS
    }

    stages {
        stage('Download .yml file from GCS') {
            steps {
                script {
                    echo "Downloading .yml file from GCS bucket: ${GCS_BUCKET_PATH}"
                    // Download the specified .yml file from the GCS path
                    sh "gsutil cp ${GCS_BUCKET_PATH} ./${LOCAL_YML_FILE}"
                }
            }
        }

        stage('Update .yml File') {
            steps {
                script {
                    // Read the downloaded .yml file
                    def configFile = readFile LOCAL_YML_FILE

                    // Replace placeholders with parameter values
                    configFile = configFile.replace('${PCI_FLOW}', params.PCI_FLOW)
                    configFile = configFile.replace('${CP_OR_RNM}', params.CP_OR_RNM)
                    configFile = configFile.replace('${OUTPUT_FILE_NAME}', params.OUTPUT_FILE_NAME)
                    configFile = configFile.replace('${FROM_PATH}', params.FROM_PATH)
                    configFile = configFile.replace('${APP_ID_SECOND}', params.APP_ID_SECOND)

                    echo "Updated .yml file content:"
                    echo configFile

                    // Write the updated content back to the same file
                    writeFile file: LOCAL_YML_FILE, text: configFile
                }
            }
        }

        stage('Upload Updated .yml File to GCS') {
            steps {
                script {
                    echo "Uploading updated .yml file back to GCS bucket: ${GCS_BUCKET_PATH}"
                    // Upload the updated .yml file to the same GCS path
                    sh "gsutil cp ./${LOCAL_YML_FILE} ${GCS_BUCKET_PATH}"
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline completed.'
        }
    }
}
