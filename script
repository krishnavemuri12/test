pipeline {
    agent any

    parameters {
        string(name: 'SOURCE_GCS_BUCKET', defaultValue: 'gs://your-source-bucket', description: 'Source GCS bucket path')
        string(name: 'DESTINATION_GCS_BUCKET', defaultValue: 'gs://your-destination-bucket', description: 'Destination GCS bucket path')
    }

    environment {
        GPG_HOME = "${WORKSPACE}/.gnupg" // Define the GPG home directory within the workspace
        GPG_RECIPIENT_CRED = credentials('gpg-recipient') // Jenkins credential ID for the GPG recipient
        TMP_DIR = "${WORKSPACE}/tmp" // Temporary directory for processing files
        GPG_KEY_PATH = "gs://your-source-bucket/gpg-key-file.asc" // Path to the GPG key file in GCS
    }

    stages {
        stage('Setup and Import GPG Key') {
            steps {
                script {
                    // Download and import the GPG key file from the GCS bucket
                    sh '''
                    mkdir -p ${GPG_HOME} ${TMP_DIR} # Create GPG home and temporary directories
                    chmod 700 ${GPG_HOME}           # Set GPG home directory permissions
                    gsutil cp ${GPG_KEY_PATH} ${TMP_DIR}/ # Download the GPG key file from GCS
                    gpg --homedir ${GPG_HOME} --import ${TMP_DIR}/gpg-key-file.asc # Import the GPG key
                    rm ${TMP_DIR}/gpg-key-file.asc   # Remove the key file after import
                    '''
                }
            }
        }

        stage('Download, Encrypt, and Upload Files') {
            steps {
                script {
                    // Download, encrypt, and upload files sequentially
                    sh '''
                    # Create a list of files from the source GCS bucket
                    gsutil ls ${SOURCE_GCS_BUCKET}/* > ${TMP_DIR}/file_list.txt

                    # Download and process each file
                    while read -r file; do
                        # Extract the filename from the path
                        filename=$(basename "$file")
                        echo "Downloading $file..."
                        gsutil cp "$file" ${TMP_DIR}/

                        # Encrypt the file
                        echo "Encrypting ${TMP_DIR}/${filename}..."
                        gpg --homedir ${GPG_HOME} --output "${TMP_DIR}/${filename}.gpg" --encrypt --recipient "${GPG_RECIPIENT_CRED}" "${TMP_DIR}/${filename}"

                        # Upload the encrypted file
                        echo "Uploading ${TMP_DIR}/${filename}.gpg to ${DESTINATION_GCS_BUCKET}..."
                        gsutil cp "${TMP_DIR}/${filename}.gpg" ${DESTINATION_GCS_BUCKET}

                        # Clean up files after processing
                        rm "${TMP_DIR}/${filename}" "${TMP_DIR}/${filename}.gpg"
                    done < ${TMP_DIR}/file_list.txt

                    # Clean up the temporary directory
                    rm -rf ${TMP_DIR}
                    '''
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution completed.'
        }
    }
}
