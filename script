pipeline {
    agent any

    parameters {
        string(name: 'SOURCE_GCS_BUCKET', defaultValue: 'gs://your-source-bucket', description: 'Source GCS bucket path')
        string(name: 'DESTINATION_GCS_BUCKET', defaultValue: 'gs://your-destination-bucket', description: 'Destination GCS bucket path')
        string(name: 'GPG_RECIPIENT', defaultValue: 'recipient@example.com', description: 'GPG recipient email address')
    }

    stages {
        stage('Import GPG Key') {
            steps {
                script {
                    // Import the GPG key from a key file stored in Jenkins
                    sh '''
                    gpg --import /path/to/gpg-key-file.asc
                    '''
                }
            }
        }

        stage('Encrypt and Upload Files') {
            steps {
                script {
                    // List files in the source GCS bucket and process each one
                    sh '''
                    gsutil ls ${SOURCE_GCS_BUCKET}/* | while read file; do
                        # Copy the file to the local workspace
                        gsutil cp "$file" .

                        # Extract the filename from the full path
                        filename=$(echo "$file" | rev | cut -d'/' -f1 | rev)

                        # Encrypt the file using GPG
                        gpg --output "${filename}.gpg" --encrypt --recipient ${GPG_RECIPIENT} "$filename"

                        # Copy the encrypted file to the destination GCS bucket
                        gsutil cp "${filename}.gpg" ${DESTINATION_GCS_BUCKET}/

                        # Remove the local copies of the original and encrypted files
                        rm "$filename" "${filename}.gpg"
                    done
                    '''
                }
            }
        }
    }

    post {
        always {
            echo 'Pipeline execution completed.'
        }
    }
}

sed -E '
s/(pub\s+)(rsa2048\s+\S+\s+\[SC\]\s+\[expires: [^\]]+\]\n\s+)([A-F0-9]{16}[A-F0-9]{16})/\1\2****/;
'
